name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and upload the binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        include:
          - goos: linux
            ext: ''
          - goos: windows
            ext: '.exe'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4

    - name: Build binary for ${{ matrix.goos }}
      run: |
        GOOS=${{ matrix.goos }} GOARCH=amd64 go build -o crf2html${{ matrix.ext }} crf2html.go

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v3
      with:
        name: crf2html-${{ matrix.goos }}
        path: ./crf2html${{ matrix.ext }}

  release:
    name: Create a new release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: crf2html-linux
        path: artifacts/linux
    - uses: actions/download-artifact@v3
      with:
        name: crf2html-windows
        path: artifacts/windows

    - name: Setup GitHub CLI and jq
      run: |
        sudo apt-get update
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key $KEY_SERVER_APT_KEY
        sudo apt-get install -y gh
      env:
        KEY_SERVER_APT_KEY: ${{ secrets.KEY_SERVER_APT_KEY }}

    - name: Create release and upload binaries
      run: |
        TIMESTAMP=$(date +"%Y-%m-%d")
        SHORT_SHA=$(echo "$GITHUB_SHA" | cut -c1-8)
        gh release create ${TIMESTAMP}-${SHORT_SHA} \
          ./artifacts/linux/crf2html \
          ./artifacts/windows/crf2html.exe \
          --title "Release ${SHORT_SHA} ($TIMESTAMP)" \
          --repo $GITHUB_REPOSITORY
      env:
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
